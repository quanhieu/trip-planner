version: '3.8'

services:
  orchestrator:
    build: .
    command: python -m agents.orchestrator_agent
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    networks:
      - agent_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./logs:/app/logs
      - ./cache:/app/cache

  search_agent:
    build: .
    command: python -m agents.search_agent
    ports:
      - "8001:8001"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    networks:
      - agent_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./logs:/app/logs
      - ./cache:/app/cache

  entertainment_agent:
    build: .
    command: python -m agents.entertainment_agent
    ports:
      - "8002:8002"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    networks:
      - agent_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./logs:/app/logs
      - ./cache:/app/cache

  meal_agent:
    build: .
    command: python -m agents.meal_agent
    ports:
      - "8003:8003"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    networks:
      - agent_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./logs:/app/logs
      - ./cache:/app/cache

  stay_agent:
    build: .
    command: python -m agents.stay_agent
    ports:
      - "8004:8004"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    networks:
      - agent_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./logs:/app/logs
      - ./cache:/app/cache

  frontend:
    build: .
    command: streamlit run travel_ui.py
    ports:
      - "8501:8501"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    networks:
      - agent_network
    depends_on:
      orchestrator:
        condition: service_healthy
      search_agent:
        condition: service_healthy
      entertainment_agent:
        condition: service_healthy
      meal_agent:
        condition: service_healthy
      stay_agent:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./logs:/app/logs
      - ./cache:/app/cache

networks:
  agent_network:
    driver: bridge
